name: Update Images JSON with Descriptions

on:
  push:
    branches:
      - main  # Run on every commit to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Install Python for image analysis
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pillow requests openai

    # Step 4: Generate images.json with descriptions
    - name: Generate images.json
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} # Add your OpenAI key to GitHub Secrets
      run: |
        import os
        import json
        from PIL import Image
        import requests

        BASE_URL = "http://openimg.saltyaus.space/images"
        IMAGES_DIR = "images"
        JSON_FILE = "images.json"

        # Initialize the JSON structure
        images_data = []

        # Helper function to generate a description
        def generate_description(image_path):
            with open(image_path, "rb") as f:
                response = requests.post(
                    "https://api.openai.com/v1/images/generations",
                    headers={"Authorization": f"Bearer {os.environ['OPENAI_API_KEY']}"},
                    json={
                        "model": "image-alpha-001",
                        "prompt": f"Describe the following image for a gallery title:",
                    },
                    files={"file": f},
                )
            if response.status_code == 200:
                return response.json()["choices"][0]["text"].strip()
            return "Description unavailable"

        # Traverse images directory
        for category in os.listdir(IMAGES_DIR):
            category_path = os.path.join(IMAGES_DIR, category)
            if os.path.isdir(category_path):
                for image_name in os.listdir(category_path):
                    if image_name.endswith((".jpg", ".png")):
                        image_path = os.path.join(category_path, image_name)
                        try:
                            # Generate description
                            description = generate_description(image_path)

                            # Append to JSON
                            images_data.append({
                                "url": f"{BASE_URL}/{category}/{image_name}",
                                "name": os.path.splitext(image_name)[0],
                                "category": category,
                                "description": description
                            })
                        except Exception as e:
                            print(f"Error processing {image_path}: {e}")

        # Write to images.json
        with open(JSON_FILE, "w") as f:
            json.dump(images_data, f, indent=2)

    # Step 5: Commit and push the updated JSON
    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "SaltyBot[bot]"
        git config --global user.email "bots@salty.cool"
        git add images.json
        if git diff-index --quiet HEAD; then
          echo "No changes to commit."
        else
          git commit -m "autogenerated desc."
          git push
